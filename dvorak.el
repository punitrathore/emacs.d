(defvar dvorak-d-q-map)
(defvar dvorak-q-d-map)

(setq dvorak-d-q-map (make-hash-table :test 'equal))
(puthash "[" "-" dvorak-d-q-map)
(puthash "]" "=" dvorak-d-q-map)
(puthash "'" "q" dvorak-d-q-map)
(puthash "," "w" dvorak-d-q-map)
(puthash "." "e" dvorak-d-q-map)
(puthash "p" "r" dvorak-d-q-map)
(puthash "y" "t" dvorak-d-q-map)
(puthash "f" "y" dvorak-d-q-map)
(puthash "g" "u" dvorak-d-q-map)
(puthash "c" "i" dvorak-d-q-map)
(puthash "r" "o" dvorak-d-q-map)
(puthash "l" "p" dvorak-d-q-map)
(puthash "/" "[" dvorak-d-q-map)
(puthash "=" "]" dvorak-d-q-map)
(puthash "\\" "\\" dvorak-d-q-map)
(puthash "a" "a" dvorak-d-q-map)
(puthash "o" "s" dvorak-d-q-map)
(puthash "e" "d" dvorak-d-q-map)
(puthash "u" "f" dvorak-d-q-map)
(puthash "i" "g" dvorak-d-q-map)
(puthash "d" "h" dvorak-d-q-map)
(puthash "h" "j" dvorak-d-q-map)
(puthash "t" "k" dvorak-d-q-map)
(puthash "n" "l" dvorak-d-q-map)
(puthash "s" ";" dvorak-d-q-map)
(puthash "-" "'" dvorak-d-q-map)
(puthash ";" "z" dvorak-d-q-map)
(puthash "q" "x" dvorak-d-q-map)
(puthash "j" "c" dvorak-d-q-map)
(puthash "k" "v" dvorak-d-q-map)
(puthash "x" "b" dvorak-d-q-map)
(puthash "b" "n" dvorak-d-q-map)
(puthash "m" "m" dvorak-d-q-map)
(puthash "w" "," dvorak-d-q-map)
(puthash "v" "." dvorak-d-q-map)
(puthash "z" "/" dvorak-d-q-map)
(puthash " " " " dvorak-d-q-map)
(puthash "_" "\"" dvorak-d-q-map)
(puthash "S" ":" dvorak-d-q-map)
;; keys with shift key pressed
(puthash "?" "{" dvorak-d-q-map)
(puthash "+" "}" dvorak-d-q-map)
(puthash "W" "<" dvorak-d-q-map)
(puthash "V" ">" dvorak-d-q-map)
(puthash "V" ">" dvorak-d-q-map)
(puthash "Z" "?" dvorak-d-q-map)

(setq dvorak-q-d-map (make-hash-table :test 'equal))
(puthash "-" "[" dvorak-q-d-map)
(puthash "=" "]" dvorak-q-d-map)
(puthash "q" "'" dvorak-q-d-map)
(puthash "w" "," dvorak-q-d-map)
(puthash "e" "." dvorak-q-d-map)
(puthash "r" "p" dvorak-q-d-map)
(puthash "t" "y" dvorak-q-d-map)
(puthash "y" "f" dvorak-q-d-map)
(puthash "u" "g" dvorak-q-d-map)
(puthash "i" "c" dvorak-q-d-map)
(puthash "o" "r" dvorak-q-d-map)
(puthash "p" "l" dvorak-q-d-map)
(puthash "[" "/" dvorak-q-d-map)
(puthash "]" "=" dvorak-q-d-map)
(puthash "\\" "\\" dvorak-q-d-map)
(puthash "a" "a" dvorak-q-d-map)
(puthash "s" "o" dvorak-q-d-map)
(puthash "d" "e" dvorak-q-d-map)
(puthash "f" "u" dvorak-q-d-map)
(puthash "g" "i" dvorak-q-d-map)
(puthash "h" "d" dvorak-q-d-map)
(puthash "j" "h" dvorak-q-d-map)
(puthash "k" "t" dvorak-q-d-map)
(puthash "l" "n" dvorak-q-d-map)
(puthash ";" "s" dvorak-q-d-map)
(puthash "'" "-" dvorak-q-d-map)
(puthash "z" ";" dvorak-q-d-map)
(puthash "x" "q" dvorak-q-d-map)
(puthash "c" "j" dvorak-q-d-map)
(puthash "v" "k" dvorak-q-d-map)
(puthash "b" "x" dvorak-q-d-map)
(puthash "n" "b" dvorak-q-d-map)
(puthash "m" "m" dvorak-q-d-map)
(puthash "," "w" dvorak-q-d-map)
(puthash "." "v" dvorak-q-d-map)
(puthash "/" "z" dvorak-q-d-map)
(puthash " " " " dvorak-q-d-map)
;; keys with shift key pressed
(puthash "{" "?" dvorak-q-d-map)
(puthash "}" "+" dvorak-q-d-map)
(puthash "<" "W" dvorak-q-d-map)
(puthash ">" "V" dvorak-q-d-map)
(puthash ">" "V" dvorak-q-d-map)
(puthash "?" "Z" dvorak-q-d-map)

(defun dvorak-get-char-from-hash (hash char)
  (gethash (concat (list char)) hash (concat (list char))))

(defun dvorak-to-qwerty ()
  (interactive)
  (let* ((end (point))
         (beg (progn (paredit-backward)
                     (point)))
         (contents (buffer-substring beg end)))
    (delete-region beg end)
    (dolist (char (append contents nil))
      (insert (dvorak-get-char-from-hash dvorak-d-q-map char)))))

(defun qwerty-to-dvorak ()
  (interactive)
  (let* ((end (point))
         (beg (progn (paredit-backward)
                     (point)))
         (contents (buffer-substring beg end)))
    (delete-region beg end)
    (dolist (char (append contents nil))
      (insert (dvorak-get-char-from-hash dvorak-d-q-map char)))))

(defun dvorak-to-qwerty-region ()
  (interactive)
  (let* ((end (region-end))
         (beg (region-beginning))
         (contents (buffer-substring beg end)))
    (delete-region beg end)
    (dolist (char (append contents nil))
      (insert (dvorak-get-char-from-hash dvorak-d-q-map char)))))

(defun qwerty-to-dvorak-region ()
  (interactive)
  (let* ((end (region-end))
         (beg (region-beginning))
         (contents (buffer-substring beg end)))
    (delete-region beg end)
    (dolist (char (append contents nil))
      (insert (dvorak-get-char-from-hash dvorak-q-d-map char)))))
